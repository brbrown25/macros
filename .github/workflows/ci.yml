# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
    - uses: actions/checkout@v2
    - name: Put back the git branch into git (Earthly uses it for tagging)
      run: |
        branch=""
        if [ -n "$GITHUB_HEAD_REF" ]; then
          branch="$GITHUB_HEAD_REF"
        else
          branch="${GITHUB_REF##*/}"
        fi
        git checkout -b "$branch" || true
    - name: Download latest earthly
      run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.4.4/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
    - name: Earthly version
      run: earthly --version
    - name: Run checks
      run: earthly +lint-check
    - name: Run test
      run: earthly +unit-test
    - name: Generate Coverage Report
      run: sbt clean coverage test coverageReport && sbt coverageAggregate
    - name: Publish Coverage Report
      run: sbt coveralls
  # publish:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   env:
  #     FORCE_COLOR: 1
  #   if: github.event_name != 'pull_request'
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Put back the git branch into git (Earthly uses it for tagging)
  #       run: |
  #         branch=""
  #         if [ -n "$GITHUB_HEAD_REF" ]; then
  #           branch="$GITHUB_HEAD_REF"
  #         else
  #           branch="${GITHUB_REF##*/}"
  #         fi
  #         git checkout -b "$branch" || true
  #     - name: Download latest earthly
  #       run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.4.4/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
  #     - name: Earthly version
  #       run: earthly --version
  #     - name: Run publish artifact
  #       run: earthly --secret PGP_PASSPHRASE=${{ secrets.PGP_PASSPHRASE }} --secret PGP_SECRET=${{ secrets.PGP_SECRET }} --secret SONATYPE_PASSWORD=${{ secrets.SONATYPE_PASSWORD }} --secret SONATYPE_USERNAME=${{ secrets.SONATYPE_USERNAME }} --secret CI_RELEASE=${{ secrets.CI_RELEASE }} --secret CI_SNAPSHOT_RELEASE=${{ secrets.CI_SNAPSHOT_RELEASE }} +publish

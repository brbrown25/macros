# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
    - uses: actions/checkout@v2
    - name: Put back the git branch into git (Earthly uses it for tagging)
      run: |
        branch=""
        if [ -n "$GITHUB_HEAD_REF" ]; then
          branch="$GITHUB_HEAD_REF"
        else
          branch="${GITHUB_REF##*/}"
        fi
        git checkout -b "$branch" || true
    - name: Download latest earthly
      run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.4.4/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
    - name: Earthly version
      run: earthly --version
    - name: Run checks
      run: earthly +lint-check
    - name: Run test
      run: earthly +unit-test
    #TODO is run these in earthly as well
    - name: Generate Coverage Report
      run: sbt clean coverage test coverageReport
#    - name: Publish Coverage Report
#      run: sbt coveralls
    #sbt coveralls currently doesn't smoothly support github actions, but there is a pr open
    - name: Publish Coverage Report
      run: sbt coverageAggregate coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        COVERALLS_FLAG_NAME: MACROS
        TRAVIS_JOB_ID: ${GITHUB_RUN_ID}
  site:
    needs: build
    name: Microsite
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Setup Ruby
        uses: actions/setup-ruby@v1

      - name: Setup Jekyll
        run: gem install jekyll -v 4.0.0

      - name: Add key to allow access to repository
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p /home/runner/.ssh
          ssh-keyscan github.com >> /home/runner/.ssh/known_hosts
          echo "${{ secrets.GIT_DEPLOY_KEY }}" | base64 --decode > /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa
          cat <<EOT >> /home/runner/.ssh/config
          Host github.com
          HostName github.com
          IdentityFile /home/runner/.ssh/id_rsa
          EOT

      - name: Build the microsite
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "gh-actions"
          git config --global push.default simple
          sbt docs/ghpagesPushSite
        env:
          MICROSITE_TOKEN: ${{ secrets.MICROSITE_TOKEN }}
          GIT_DEPLOY_KEY: ${{ secrets.GIT_DEPLOY_KEY }}
#addSbtPlugin("org.scoverage" % "sbt-scoverage" % "1.6.1")
#https://github.com/scala-steward-org/scala-steward/blob/master/.github/workflows/ci.yml
  # publish:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   env:
  #     FORCE_COLOR: 1
  #   if: github.event_name != 'pull_request'
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Put back the git branch into git (Earthly uses it for tagging)
  #       run: |
  #         branch=""
  #         if [ -n "$GITHUB_HEAD_REF" ]; then
  #           branch="$GITHUB_HEAD_REF"
  #         else
  #           branch="${GITHUB_REF##*/}"
  #         fi
  #         git checkout -b "$branch" || true
  #     - name: Download latest earthly
  #       run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.4.4/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
  #     - name: Earthly version
  #       run: earthly --version
  #     - name: Run publish artifact
  #       run: earthly --secret PGP_PASSPHRASE=${{ secrets.PGP_PASSPHRASE }} --secret PGP_SECRET=${{ secrets.PGP_SECRET }} --secret SONATYPE_PASSWORD=${{ secrets.SONATYPE_PASSWORD }} --secret SONATYPE_USERNAME=${{ secrets.SONATYPE_USERNAME }} --secret CI_RELEASE=${{ secrets.CI_RELEASE }} --secret CI_SNAPSHOT_RELEASE=${{ secrets.CI_SNAPSHOT_RELEASE }} +publish
